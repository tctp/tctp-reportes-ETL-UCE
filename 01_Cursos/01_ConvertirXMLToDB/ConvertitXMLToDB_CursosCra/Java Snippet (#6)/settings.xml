<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="scriptImports" type="xstring" value="// Your custom imports:%%00010import org.knime.core.node.NodeLogger;%%00010import java.io.*;%%00010import java.nio.file.Paths;%%00010import java.nio.file.Files;%%00010import java.nio.file.Path;%%00010import java.nio.charset.Charset;%%00010import java.nio.charset.StandardCharsets;%%00010"/>
        <entry key="scriptFields" type="xstring" value="// Your custom variables:%%00010"/>
        <entry key="scriptBody" type="xstring" value="// Enter your code here:%%00010NodeLogger nl = NodeLogger.getLogger(AbstractJSnippet.class);%%00010%%00010try {%%00010%%00009//File infile = new File(c_Filepath);%%00010%%00009//File outfile = new File(c_Parentfolder+&quot;\\&quot;+c_Filename+&quot;_output_&quot;+ROWCOUNT+&quot;.&quot;+c_Fileextension);%%00010%%00009//FileReader reader = new FileReader(c_Filepath);%%00010%%00009//FileWriter writer = new FileWriter(c_Parentfolder+&quot;\\&quot;+c_Filename+&quot;_output_&quot;+ROWCOUNT+&quot;.&quot;+c_Fileextension);%%00010%%00009%%00010%%00009%%00010%%00009%%00010%%00009Path path = Paths.get(c_Filepath);%%00010%%00009%%00010%%00009Charset charset = Charset.forName(&quot;UTF-8&quot;);%%00010%%00009%%00010%%00009String content = Files.readString(path);%%00010%%00010%%00009String no_nsbp = content.replaceAll(&quot;&amp;nbsp;&quot;, &quot;&quot;);%%00010%%00009String encoding = no_nsbp.replaceAll(&quot;xml version=\&quot;1.0\&quot;&quot;,&quot;xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;&quot;);%%00010%%00009//nl.warn(&quot;&quot;+encoding);%%00010%%00009//FileWriter fWriter = new FileWriter(c_Parentfolder+&quot;\\&quot;+c_Filename+&quot;_output_&quot;+ROWINDEX+&quot;.&quot;+c_Fileextension);%%00010%%00009out_FileNewPath = c_Parentfolder+&quot;\\&quot;+c_Filename+&quot;_output_&quot;+ROWINDEX+&quot;.&quot;+c_Fileextension;%%00010%%00009FileOutputStream outputStream = new FileOutputStream(out_FileNewPath);%%00010  %%00009OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream, charset);%%00010  %%00009BufferedWriter bufferedWriter = new BufferedWriter(outputStreamWriter);%%00010%%00009bufferedWriter.write(encoding);%%00010%%00009bufferedWriter.close();%%00010%%00009//fWriter.write(encoding);%%00010%%00009//fWriter.close();%%00010%%00010%%00009//out_FileNewPath = c_Parentfolder+&quot;\\&quot;+c_Filename+&quot;_output_&quot;+ROWINDEX+&quot;.&quot;+c_Fileextension;%%00010%%00009%%00010%%00009//Path pathOut = Paths.get(out_FileNewPath);%%00010%%00010%%00009//Files.write(path, encoding, StandardCharsets.UTF_8);%%00010%%00009//Files.newBufferedReader(pathOut);%%00010%%00009%%00010}catch(IOException e) {%%00010%%00009nl.error(&quot;Un error: &quot; + e.getMessage());%%00010}%%00010%%00010%%00009%%00009%%00010%%00010%%00010"/>
        <config key="jarFiles">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <config key="outCols">
            <entry key="array-size" type="xint" value="1"/>
            <config key="0">
                <entry key="Name" type="xstring" value="FileNewPath"/>
                <entry key="JavaName" type="xstring" value="out_FileNewPath"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.def.StringCell$StringCellFactory.createCell(class java.lang.String)"/>
                <entry key="replaceExisting" type="xboolean" value="false"/>
            </config>
        </config>
        <config key="outVars">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <config key="inCols">
            <entry key="array-size" type="xint" value="4"/>
            <config key="0">
                <entry key="Name" type="xstring" value="File path"/>
                <entry key="JavaName" type="xstring" value="c_Filepath"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(StringValue,class java.lang.String,String)"/>
            </config>
            <config key="1">
                <entry key="Name" type="xstring" value="Parent folder"/>
                <entry key="JavaName" type="xstring" value="c_Parentfolder"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(StringValue,class java.lang.String,String)"/>
            </config>
            <config key="2">
                <entry key="Name" type="xstring" value="File name"/>
                <entry key="JavaName" type="xstring" value="c_Filename"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(StringValue,class java.lang.String,String)"/>
            </config>
            <config key="3">
                <entry key="Name" type="xstring" value="File extension"/>
                <entry key="JavaName" type="xstring" value="c_Fileextension"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(StringValue,class java.lang.String,String)"/>
            </config>
        </config>
        <config key="inVars">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <entry key="version" type="xstring" value="version 1.x"/>
        <entry key="templateUUID" type="xstring" isnull="true" value=""/>
        <entry key="runOnExecute" type="xboolean" value="false"/>
        <config key="bundles">
            <entry key="array-size" type="xint" value="0"/>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.base.node.jsnippet.JavaSnippetNodeFactory"/>
    <entry key="node-name" type="xstring" value="Java Snippet"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Java Snippet Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.jsnippets"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.5.0.v202110181249"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Javasnippet"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.javasnippet.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.5.0.v202110181249"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Java Snippet"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 11, Cols: 7"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="a653c632-6745-4c09-9cdf-1640b7c76777"/>
    </config>
</config>
